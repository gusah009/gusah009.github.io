{"version":3,"file":"component---src-templates-post-template-tsx-5d03038bb204c245d095.js","mappings":"oNAgBA,IACA,EADiB,cAdjB,SAA6BA,EAAOC,GAClC,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfC,IAAKN,GACJD,GAAqB,gBAAoB,OAAQ,CAClDQ,SAAU,UACVC,EAAG,6JACHC,SAAU,YAEd,I,UCsBA,EA3B2D,YAIvD,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAIA,OAEEC,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,UAAU,iGACbD,EAAAA,EAAAA,IAACE,EAAD,CACED,UAAU,6EACVE,QAPa,kBAAMC,OAAOC,QAAQC,MAAxC,KAUIN,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,UAAU,oHACZJ,IAGHG,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,UAAU,4GACbD,EAAAA,EAAAA,IAAAA,MAAAA,KAAMD,EAAWQ,KAAK,SACtBP,EAAAA,EAAAA,IAAAA,MAAAA,KAAMF,IArBd,ECkBA,EAnBmD,YAK/C,IAJFD,EAIC,EAJDA,MACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,WACAS,EACC,EADDA,UAEA,OAEER,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,UAAU,kCACbD,EAAAA,EAAAA,IAACS,EAAAA,EAAD,CACEC,MAAOF,EACPG,IAAI,YACJV,UAAU,qEAEZD,EAAAA,EAAAA,IAACY,EAAD,CAAcf,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,IAd1D,ECQA,EAVyD,YAAqB,IAATc,EAAQ,EAARA,KACnE,OAEEb,EAAAA,EAAAA,IAAAA,MAAAA,CACEC,UAAU,+FACVa,wBAAyB,CAAEC,OAAQF,IALzC,ECqCA,EA5ByC,WACvC,IAAMG,GAAUC,EAAAA,EAAAA,aAwBhB,OAtBAC,EAAAA,EAAAA,YAAU,WACR,GAAwB,OAApBF,EAAQG,QAAZ,CAEA,IAAMC,EAAgCC,SAASC,cAAc,UAEvDC,EAAuC,CAC3CC,IAtBM,gCAuBNC,KAtBO,8BAuBP,aAAc,WACdC,MAAO,UACPC,MAAM,eACNC,YAAa,YACbC,MAAO,QAGTzC,OAAO0C,QAAQP,GAAYQ,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDb,EAAWc,aAAaF,EAAKC,EAD/B,IAIAjB,EAAQG,QAAQgB,YAAYf,EAlBQ,CAD7B,GAoBN,KAEIpB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKC,UAAU,mBAAmBR,IAAKuB,GAzBhD,ECwCA,EApC2D,YAKxD,IAHsBoB,EAGtB,EAJDC,KACEC,kBAAqBF,MAEXG,EACX,EADDC,SAAYD,KAEZ,EAcIH,EAAM,GAbRK,KACE5B,EAFJ,EAEIA,KAFJ,IAGI6B,YACE7C,EAJN,EAIMA,MACA8C,EALN,EAKMA,QACA7C,EANN,EAMMA,KACAC,EAPN,EAOMA,WAPN,IAQMS,UACqBoC,EAT3B,EASQC,gBAAmBD,gBACnBE,EAVR,EAUQA,UAMR,OACE9C,EAAAA,EAAAA,IAAC+C,EAAAA,EAAD,CAAUlD,MAAOA,EAAOmD,YAAaL,EAASM,IAAKV,EAAM7B,MAAOoC,IAC9D9C,EAAAA,EAAAA,IAACkD,EAAD,CACErD,MAAOA,EACPC,KAAMA,EACNC,WAAYA,EACZS,UAAWoC,KAEb5C,EAAAA,EAAAA,IAACmD,EAAD,CAAatC,KAAMA,KACnBb,EAAAA,EAAAA,IAACoD,EAAD,MA/BN,C","sources":["webpack://gatsby-starter-default/./node_modules/@heroicons/react/solid/esm/ArrowCircleLeftIcon.js","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction ArrowCircleLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ArrowCircleLeftIcon);\nexport default ForwardRef;","import React, { FunctionComponent } from 'react';\nimport { ArrowCircleLeftIcon } from '@heroicons/react/solid';\n\nexport type PostHeadInfoProps = {\n  title: string;\n  date: string;\n  categories: string[];\n};\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  const goBackPage = () => window.history.back(); // TODO 훅 사용해서 해보기\n\n  return (\n    // PostHeadInfoWrapper\n    <div className=\"flex flex-col w-full md:w-[768px] h-full my-0 mx-auto py-10 px-5 md:py-14 md:px-0 text-white\">\n      <ArrowCircleLeftIcon\n        className=\" grid place-items-center w-7 h-7 md:w-10 md:h-10 text-white cursor-pointer\"\n        onClick={goBackPage}\n      />\n      {/* Title */}\n      <div className=\" overflow-hidden break-words mt-auto text-ellipsis whitespace-normal line-clamp-2 text-2xl md:text-5xl font-bold\">\n        {title}\n      </div>\n      {/* PostData */}\n      <div className=\"flex justify-between items-start md:items-center mt-4 text-base md:text-lg font-normal md:font-semibold\">\n        <div>{categories.join(' / ')}</div>\n        <div>{date}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostHeadInfo;\n","import React, { FunctionComponent } from 'react';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo';\n\ntype PostHeadProps = PostHeadInfoProps & {\n  thumbnail: IGatsbyImageData;\n};\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail,\n}) {\n  return (\n    // PostHeadWrapper\n    <div className=\" relative w-full h-72 md:h-96\">\n      <GatsbyImage\n        image={thumbnail}\n        alt=\"thumbnail\"\n        className=\" absolute -z-10 w-full h-72 md:h-96 object-cover brightness-50 \"\n      />\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </div>\n  );\n};\n\nexport default PostHead;\n","import React, { FunctionComponent } from 'react';\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return (\n    // MarkdownRenderer\n    <div\n      className=\"prose lg:prose-xl flex flex-col w-[768px] my-0 mx-auto py-14 px-5 md:py-16 md:px-0 break-all\"\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  ); /* w-md 커스텀 만들어보기 */\n};\n\nexport default PostContent;\n","import React, { createRef, FunctionComponent, useEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'gusah009/gusah009.github.io';\n\ntype UtterancesAttributesType = {\n  src: string;\n  repo: string;\n  'issue-term': string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': 'pathname',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <div className=\"py-0 px-5 md:p-0\" ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PostFrontmatterType } from 'types/PostItem.types';\nimport Template from 'components/Common/Template';\nimport PostHead from 'components/Post/PostHead';\nimport PostContent from 'components/Post/PostContent';\nimport CommentWidget from 'components/Post/CommentWidget';\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[];\n    };\n  };\n  location: {\n    href: string;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n\n  return (\n    <Template title={title} description={summary} url={href} image={publicURL}>\n      <PostHead\n        title={title}\n        date={date}\n        categories={categories}\n        thumbnail={gatsbyImageData}\n      />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport type PostPageItemType = {\n  node: {\n    html: string;\n    frontmatter: PostFrontmatterType;\n  };\n};\n"],"names":["props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","title","date","categories","___EmotionJSX","className","ArrowCircleLeftIcon","onClick","window","history","back","join","thumbnail","GatsbyImage","image","alt","PostHeadInfo","html","dangerouslySetInnerHTML","__html","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","entries","forEach","key","value","setAttribute","appendChild","edges","data","allMarkdownRemark","href","location","node","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","Template","description","url","PostHead","PostContent","CommentWidget"],"sourceRoot":""}